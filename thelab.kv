StackLayoutExample:

<ScrollViewExample@ScrollView>: # this one is a view that can take on a child (in this case the stack layout)
    StackLayoutExample:
        size_hint: 1, None  # veritcal of 100% and none for horizontal
        height: self.minimum_height  # kivy calculates the height of the content for us

<StackLayoutExample>
    # in stack layout, options are left/right|right/left and top/bottom|bottom/top (notice the contraction below)
    # orientation: " rl-bt"
    # here's how to include padding around the entire set of buttons:
    # padding: ("20dp", "20dp", "20dp", "20dp") # it goes clockwise from the left.
    # spacing: "20dp", "20dp"
<GridLayoutExample@GridLayout>: # this is a direct invocation, so you don't need the Python code in the other file
    # rows
    # cols
    rows: 2
    Button:
        text: "A"
        size_hint: None, 1
        width: "60dp"
    BoxLayoutExample:
    #Button:
    #    text: "B"
    Button:
        text: "C"
    Button:
        text: "D"
        size_hint: None, 1
        width: "60dp"
    Button:
        text: "E"
    Button:
        text: "F"



<AnchorLayoutExample>:
    anchor_x: "center"  # right, left, center (center is the default)
    anchor_y: "top"  # bottom, top, center (center is the default)
    BoxLayout:
        size_hint: .2, .2
        Button:
            text: "A"
        
        Button:
            text: "B"


    # there is no stacking for widgets

<BoxLayoutExample>
    orientation: "horizontal"
    Button:
        text: "A"
        size_hint: .5, .5  # this gives 80% of the width and 50% of the height compared to the other buttons
        # size_hint: .5, None # these are relative. You want 100% of width
        height: "60dp" # here, you have fixed the height to 60dp, regardless of any shifts in the window.
        pos_hint: {"center_y": .5}  # on the x axis, you're "starting" at the 75% line (the middle). 
                                    # If you gave it "1," it would be completely outside the window.
    
    BoxLayout:
        orientation: "vertical"
        spacing: "10dp"
        Button:
            text: "B1"
        Button:
            text: "B2"
        Button:
            text: "B3"
        Button:
            text: "B4"

    Label:
        text: "C"

<MainWidget>:
    Button:
        text: "Hello"
        size: "100dp", "80dp"
        pos: "100dp", "200dp" # these are objective sizes, so you'll be able to use this code anywhere
        color: 0, 0, 1, 1 

    Label:
        text: "Hello2"
        size: "100dp", "80dp"
        pos: "200dp", "300dp" 
        color: 1, 0, 0, 1 # red, green, blue, opacity values